const GLOBALS={COLOR_SCHEME:"dark",PLACEMENT:"right"},ADDRESS={SENDER:null,RECEIVER:null},ELEMENTS={tipButton:null,tipModal:null,tipInput:null,senderAddress:null};let etherem;const connectWallet=async()=>{try{const n=await ethereum.request({method:"eth_requestAccounts"});ADDRESS.SENDER=n[0];const{tipButton:e,senderAddress:t}=ELEMENTS;t.innerHTML=abbreviateAddress(ADDRESS.SENDER),t.style.display="block",e.innerHTML="Tip Jar",e.onclick=displayModal}catch(n){console.error(errorHandler(n))}},sendTip=async()=>{try{const{tipInput:n}=ELEMENTS,e=(1e18*n.value).toString(16),t=await ethereum.request({method:"eth_sendTransaction",params:[{to:ADDRESS.RECEIVER,from:ADDRESS.SENDER,value:`0x${e}`}]});console.log(t),hideModal()}catch(n){hideModal(),console.error(errorHandler(n))}},displayModal=()=>{const{tipModal:n,tipButton:e}=ELEMENTS;n.style.display="block",e.innerHTML="Send Tip",e.onclick=sendTip},hideModal=()=>{const{tipModal:n,tipButton:e}=ELEMENTS;n.style.display="none",e.innerHTML="Tip Jar",e.onclick=displayModal},generateTipJar=()=>{const n=`\n    <style>${`\n    .tipContainer {\n      position: absolute;\n      top: 0;\n      ${GLOBALS.PLACEMENT}: 0 !important;\n      max-width: 500px;\n      margin: 20px;\n      display: flex;\n      flex-direction: column;\n      border-radius: 10px;\n      font-family: inherit;\n      z-index: 108000;\n      color: ${"dark"===GLOBALS.COLOR_SCHEME?"#ffffff":"#212429"}\n    }\n    \n    .tipContainer input {\n      padding: 10px;\n      outline: none;\n      border: none;\n    }\n    \n    .tipContainer input::-webkit-inner-spin-button {\n      -webkit-appearance: none;\n    }\n    \n    .tipContainer p {\n      margin: 0;\n      font-size: 0.8rem;\n    }\n    \n    .tipButtonContainer {\n      display: flex;\n      flex-direction: row-reverse;\n    }\n    \n    .tipButton {\n      padding: 10px 25px;\n      border: 2px solid ${"dark"===GLOBALS.COLOR_SCHEME?"#ffffff":"#212429"};\n      border-radius: 10px;\n      cursor: pointer;\n    }\n    \n    .senderAddress {\n      padding: 10px;\n      border-radius: 10px 0 0 10px;\n      display: none;\n    }\n    \n    .receiverAddress {\n      padding: 10px 0;\n    }\n    \n    .tipModal {\n      display: flex;\n      flex-direction: column;\n      align-items: center;\n      display: none;\n    }\n    \n    .walletInformation {\n      width: 100%;\n      padding: 0 10px;\n    }\n    \n    .tipAmountContainer {\n      display: flex;\n      flex-direction: row;\n      align-items: center;\n    }\n    \n    .tipAmount {\n      width: '100%';\n      margin: 10px;\n      white-space: nowrap;\n      overflow: hidden;\n      appearance: textfield;\n      text-align: right;\n    }\n    \n    .eth {\n      padding: 0 10px 0 0;\n      font-size: 1.4rem;\n    }\n  `}</style>\n    <div class="tipContainer">\n    <div id="tipModal" class="tipModal">\n      <div classNam="tipAmountContainer">\n        <input id="tipInput" class="tipAmount" type="number" min="0" step="0.01" placeholder="0" />\n        <span class="eth">Îž</span>\n      </div>\n      <div class="walletInformation">\n        <p>To:</p>\n        <div class="receiverAddress">${abbreviateAddress(ADDRESS.RECEIVER)}</div>\n        <p>From:</p>\n      </div>\n    </div>\n    <div class="tipButtonContainer">\n      <div id="tipButton" class="tipButton">Connect Wallet</div>\n      <div id="senderAddress" class="senderAddress" />\n    </div>\n  </div>\n  `,e=document.createElement("div");return e.innerHTML=n,e},abbreviateAddress=n=>n.length>20?`${n.substring(0,6)}...${n.substring(n.length-4)}`:n,errorHandler=n=>"object"==typeof n?`ðŸ’° TipJar Error:${JSON.stringify(n)}`:`ðŸ’° TipJar Error:${n}`;window.TipJar=(()=>{if(window.TipJarOptions&&window.ethereum){const{RECEIVER_ADDRESS:n,COLOR_SCHEME:e,PLACEMENT:t}=window.TipJarOptions;ethereum=window.ethereum,ADDRESS.RECEIVER=n,GLOBALS.COLOR_SCHEME=e,GLOBALS.PLACEMENT=t;try{window.tipJar&&window.tipJar.remove(),window.tipJar=generateTipJar(),document.body.insertAdjacentElement("beforeend",window.tipJar),ELEMENTS.tipButton=document.getElementById("tipButton"),ELEMENTS.tipModal=document.getElementById("tipModal"),ELEMENTS.tipInput=document.getElementById("tipInput"),ELEMENTS.senderAddress=document.getElementById("senderAddress"),ELEMENTS.tipButton.onclick=connectWallet}catch(n){console.error(errorHandler(n))}}else console.log("TipJar cannont be shown!")}),window.TipJar();